# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Caipirinha Sprinters
# This file is distributed under the same license as the tutorial.todoapp package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tutorial.todoapp 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-06 13:36\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../chapter_1.rst:13
# 3a4a0e8f9f544e14bf42c8934182ddef
msgid "Chapter 1: Through-The-Web"
msgstr ""

#: ../chapter_1.rst:16
# aec7fa7d389b4b048cf1fc01dc9a3cbe
msgid "Getting Started with Content Types"
msgstr ""

#: ../chapter_1.rst:18
# 1e3313af983b485e8dd4e791183042ea
msgid "If you don't know what a content type is, don't worry! Sit back, relax, and do the tutorial! I'll save the mumbo jumbo definitions for another day. In this first part, we will make a Todo list without touching any code. It won't be fancy, but it will give you a good idea of how things work in Plone."
msgstr ""

#: ../chapter_1.rst:23
# 73645b1f6e9847d4a939db5807444dc7
msgid "The way that Plone handles content is a little different than your average relational database driven framework, so if you don't understand something right away, sit back, relax, and finish the tutorial."
msgstr ""

#: ../chapter_1.rst:27
# b644a3412b1e448a87df5b240a0335ce
msgid "Generally speaking, content-types are just that: types of content. By default, in Plone you get the News Item content-type, the Event content-type and so on. So if you add a content item that is of Event type, you are using the Event content-type. In our case, we will create a new content-type that will represent a Todo Item."
msgstr ""

#: ../chapter_1.rst:35
# f800e85b20204c8fb3ccdac40a239d35
msgid "Create a New Content Type"
msgstr ""

#: ../chapter_1.rst:37
# a507b30a232a4ad0b13fc88a922e70e8
msgid "First we need to create a new content type to represent an item on our Todo list. This will be a type with one field, that which needs to be done."
msgstr ""

#: ../chapter_1.rst:40
# efb3ef7673e9406b885a110dcc204a6b
msgid "Navigate to `site setup` as shown below, or just enter ``http://localhost:8080/Plone/@@overview-controlpanel`` in your browser. This is where you can configure Plone for happy fun time."
msgstr ""

#: ../chapter_1.rst:47
# 9e68ff2bccc04540a28c791be4804826
msgid "Now comes the fun part. We want to create our own type `Through-The-Web` aka. `TTW`. This type will be a Todo Item. Let’s click `Dexterity Content Types` (or go directly to ``http://localhost:8080/Plone/@@dexterity-types``)."
msgstr ""

#: ../chapter_1.rst:55
# c191c04032fe497893c6c22447636691
msgid "Create a Todo List Item by clicking ``Add New Content Type``."
msgstr ""

#: ../chapter_1.rst:60
# 85aea3f40df145a293e2db0859fadf99
msgid "Fill in the fields as seen below and then click ``Add``."
msgstr ""

#: ../chapter_1.rst:65
# e683ef557dca482d97941f0ac953a217
msgid "Now you will see that there is a new type to play with. Let’s adjust a few things. Click the name of the new type to edit."
msgstr ""

#: ../chapter_1.rst:71
# fa498e6a3a2c415a988bec1c259cc694
msgid "There are two important things we need to do here: we need to adjust some `behaviors`, and add some `fields`. Let’s look at the behaviors first."
msgstr ""

#: ../chapter_1.rst:77
# 13a06fc152af4719a593451eefc2d4fb
msgid "By default, all Plone content-types have `Dublin Core <http://en.wikipedia.org/wiki/Dublin_Core>`_ metadata enabled (you may know it as ``title`` and ``description``. We don’t need this for our über simple Todo list item. Uncheck ``Dublin Core metadata`` and then click ``Save``."
msgstr ""

#: ../chapter_1.rst:85
# fe56c885326144539df304fc75a5d83d
msgid "Next we need to add some fields. Because this type is so simple, we will add just one field, but feel free to go CRAZY. Start by going back to the ``Fields`` tab and clicking ``Add new field...``."
msgstr ""

#: ../chapter_1.rst:92
# 8223583bc39c4e8594742b93151892b1
msgid "Add a field called ``Todo``, or anything else you want. But! Note that it's very important that the `short name` is ``title``. By using this key short name, we make sure that all Todo Items are searchable from smart search. Update the field as seen below and click ``Add``."
msgstr ""

#: ../chapter_1.rst:100
# 34c613557f8f41159d1ac646311d8846
msgid "You will see that a new field has been added to your content type. If you are feeling adventuresome, click on the settings tab next to the field to set other properties, or just see what’s available."
msgstr ""

#: ../chapter_1.rst:109
# 61e6dea13d3c42f1b652497791f9ed8d
msgid "Trying out the Todo Item content-type"
msgstr ""

#: ../chapter_1.rst:111
# b9a5f58da5f84f74987c4e518e5115fb
msgid "Now it's time to reap the rewards of all of your effort. Let's put all of our Todo Items in one particular folder so that we can have collections of items throughout the site. For this tutorial, we will be putting everything in the root of the site so it's easy to debug."
msgstr ""

#: ../chapter_1.rst:116
# 56d6303bdc8840a98e5762e7b2cbae42
msgid "From the root, add a new folder called ``Todo``."
msgstr ""

#: ../chapter_1.rst:124
# f9d5674069b64c4598e9cd1f1aaca348
msgid "Add a new `Todo Item` to the new `Todo` folder."
msgstr ""

#: ../chapter_1.rst:132
# 8ba25fa9335d4d5b8991eb879b971fe1
msgid "Celebrate!"
msgstr ""

#: ../chapter_1.rst:137
# 292bed6e4bd74912a4bc45f39e3f7b53
msgid "You may be wondering about earlier, when we asked you to make sure that the `short name` for the Todo Item was called ``title``. The time has come to let you in on a little secret. Calling the short name either ``title`` or ``description`` will automatically add that text to the livesearch menu. WHAT?!? I know! When life gives you lemonade, spike it with vodka and enjoy liberally! You can now search for your Todo Items in Live Search."
msgstr ""

#: ../chapter_1.rst:147
# 5088e906af0d4a9ea9fd0862880c0677
msgid "But wait a minute... This todo item is marked ``private``, and that doesn't really make sense. It's a good thing Plone has an easy solution for that. In the next section, we will go over the basics of that magical, mystical word: `workflow`."
msgstr ""

#: ../chapter_1.rst:154
# 8e9d2ce3af554a45806c1051afca8fe8
msgid "Getting Started with Workflows"
msgstr ""

#: ../chapter_1.rst:156
# 180d82e7bd5944dcb45c41e3b1f803fb
msgid "So, workflows. What are they? They are a mechanizm to control the flow of a content item through varios states. Most commonly, and by default in Plone, you deal with a `publication` workflow. For example: A writer writes up a News Item and submits it for reviewal. Then the in-house reviewing team goes through the text and publishes the News Item so it is public for the entire world to see."
msgstr ""

#: ../chapter_1.rst:163
# 1e11704b29274f779d8682375eb4be1a
msgid "The Todo Item we added in the last section is marked as ``private`` because by default all new Plone content types are assigned a complex publication workflow called ``simple_publication_workflow``. I know what you are thinking: simple publication whodie whatie grble gobble??!?! Just like before, let's bypass trying to explain what that means and just fix it. Relax, enjoy, and finish the tutorial!"
msgstr ""

#: ../chapter_1.rst:170
# e02c26ada3c745abb9b7c7db72ffa205
msgid "If you aren't interested in workflows, or already know all about this stuff, feel free to skip straight to the next chapter!"
msgstr ""

#: ../chapter_1.rst:173
# 227ea5cc185e416582d43155b08b8d0a
msgid "Todo Items really have 2 states that we are interested in: `open` and `complete`. Let's make that happen."
msgstr ""

#: ../chapter_1.rst:176
# 5410d0a7edc04594bab5c04a9177b3d4
msgid "Head over to the ZMI at ``http://localhost:8080/Plone/manage_main``."
msgstr ""

#: ../chapter_1.rst:177
# 60f53585530f479ab07c7faf6763124f
msgid "In the ZMI, open the ``portal_workflow`` tool."
msgstr ""

#: ../chapter_1.rst:182
# 1a296b40afbd4e79b987ca4ab8b029cc
msgid "On this page, we see all content-types in our portal `mapped` to a workflow. Our new type, Todo Item, is mapped to ``(Default)``. You can see right below that the default is ``Simple Publication Workflow``. This is just too complex for our little Todo Item."
msgstr ""

#: ../chapter_1.rst:190
# 433ed64c829c4cd4ae53e8134089be33
msgid "So let's create a new one that suites our needs perfectly! Click the ``contents`` tab at the top of the page to get a listing of all the available workflows."
msgstr ""

#: ../chapter_1.rst:197
# 7dba7719f345445f9021a25e23721ed1
msgid "You can poke around here all you like, but the details of each one of these workflows are better left to another tutorial. When in doubt, you can always come back to these workflows to see examples of how things can be done. Onwards and upwards!"
msgstr ""

#: ../chapter_1.rst:202
# 0a55357d798a4247a47343fed3c11a72
msgid "Let's create a new workflow for our Todo Items and call it ``todo_item_workflow``. We will make a new workflow by copying and customizing one of the workflows that are already there. Duplicate the ``one_state_workflow``."
msgstr ""

#: ../chapter_1.rst:210
# 05ef6e7d57854913a7999c0f475da71b
msgid "Rename the copied workflow to ``todo_item_workflow``."
msgstr ""

#: ../chapter_1.rst:218
# d83477a4682c40199278dccb0c973a44
msgid "You will be spit back out and the workflow contents page. Click the workflow to start editing."
msgstr ""

#: ../chapter_1.rst:224
# 251ef4c3a4634a79ba60a8082e759fab
msgid "Let's update the name of the workflow so we don't double take later on."
msgstr ""

#: ../chapter_1.rst:230
# f7fd8dea96874c888e95ac97e95022c7
msgid "Workflow is something that takes time to get used to if you have never encoutered the concept. The best analogy in our case is to a car. The car engine has two simple states: `on` and `off`. To transition from on to off and vice versa, it needs some action from the driver. The same for our TODO items. They have two states: `open` and `complete`. In order to get them from `Incomplete` to `Complete`, the user needs to click something. Don't understand yet? Relax, sit back, and finish the tutorial."
msgstr ""

#: ../chapter_1.rst:238
# 278ec193270e40da9554b9ed551343d1
msgid "Lets start by adding out base states. We will call them `open` and `complete`. From the edit workflow screen, click on the ``States`` tab."
msgstr ""

#: ../chapter_1.rst:244
# c7fafa95cc47421cb0b96cdbbf598ce9
msgid "Delete the currently listed state."
msgstr ""

#: ../chapter_1.rst:250
# f0627a88c9fa45d89cda43825e0c80c9
msgid "Add two states with the ids ``open`` and ``completed``."
msgstr ""

#: ../chapter_1.rst:258
# c484a91211d7418e81c792ef89bcd233
msgid "Next lets add the transitions. The transitions will take the TODO item from `open` to `completed` and vice versa (in case a user accidentally marks an item as complete. Click on the ``Transitions`` tab."
msgstr ""

#: ../chapter_1.rst:265
# e1a321906bba4fe0b60690ed98e250b4
msgid "Add two transitions: `complete` and `reopen`. When a user `completes` a task, it will move into the `completed` state. When a user `reopens` a task, it will go back to the `open` state."
msgstr ""

#: ../chapter_1.rst:272
# 3f158d4ff61b451390342afb0f252e45
msgid "Let's add a few details to these new transitions. Let's start with `complete`. Click on ``complete`` to edit the transition."
msgstr ""

#: ../chapter_1.rst:278
# 8935b842b22143f981084ff6f6cdc7a1
msgid "First add a title so you remember later what this does. Description is optional but adding one will help you keep your thoughts clear and remind the `future you` what the `today you` is thinking. The destination state should be set to ``completed``. We also want to make sure that only people with mega permissions, or the owner itself, can change the state so we add ``Modify portal content`` to the ``Permissions`` box."
msgstr ""

#: ../chapter_1.rst:285
# ecc69db1bf054cdaaead65b805bbfb0d
msgid "All this means nothing if we don't give the user a chance to change the state. Next to ``Display in actions box``, we can set the title for what will be displayed in the workflow drop down box of the item (where `Pending`, `Reject`, etc where earlier). Let's call it ``Complete``. Last but not least, we need to add the URL that the action points to. I could make this tutorial 100 years long and explain why you have to do this, but accept that it has to be done, relax, and follow this formula:"
msgstr ""

#: ../chapter_1.rst:297
# e0ead4d718b448d2adbc90d058beb234
msgid "where `X` is the id of the transition. So for this case, in the URL box, you will add"
msgstr ""

#: ../chapter_1.rst:307
# e82c986ffa804cd0a32a72b3df7f8735
msgid "Double check everything and click ``Save``."
msgstr ""

#: ../chapter_1.rst:309
# 10ffa912754f4e118e93ad7229d99cfa
msgid "If your brain isn't hurting yet it will be soon. Go back to the transitions listing."
msgstr ""

#: ../chapter_1.rst:319
# 3048ada39e384350bf9df9df5516f0ac
msgid "Let's update the `reopen` transition and update in a similar manner. This time, the destination state is ``open``, and following the formula above, the URL is ``%(content_url)s/content_status_modify?workflow_action=reopen``."
msgstr ""

#: ../chapter_1.rst:326
# 79d52e9fa6d145119cdd3a04686af407
msgid "Now we have 2 states and 2 transitions, but they aren't 100% linked together... yet. Go back to the workflow listing, click the ``States`` tab and then and click on ``completed`` to edit the state."
msgstr ""

#: ../chapter_1.rst:336
# d175c78b95fd429f9b6ee77db9f4d2fc
msgid "Add a title, since this is what users see in the top right corner of the TODO items, and then check ``reopen`` as a possible transition. This means that when a TODO item is completed, it will only allow the user to reopen it (and not re-complete it, for example). In the same respect, open the open transition, add a title, and mark ``complete`` as a possible transition."
msgstr ""

#: ../chapter_1.rst:348
# 0a0333b5284b43bdb3077b6d40edd9c5
msgid "When we create a new TODO item, we need to tell Plone what the first state is. Go back to the workflow states listing, and make ``open`` the initial state."
msgstr ""

#: ../chapter_1.rst:355
# 3da0f40d1b9444bb911c3246c841843d
msgid "And that's it! Almost... Last but not least, we need to assign our new workflow to our TODO item type. Go back to the main workflow screen."
msgstr ""

#: ../chapter_1.rst:361
# 87cec5b5909844b9a8ab5186a69c62cb
msgid "Instead of mapping to the ``(Default)`` workflow, we are going to map to the id of our new workflow, ``todo_item_workflow``, and then click ``Change``."
msgstr ""

#: ../chapter_1.rst:364
# ac42f2099dc9416bab53c7cc195cde49
msgid "If you already have TODO items in your site, you MUST click ``Update Security Settings`` to update the workflow for the items. Instead of going into gross detail about why this is the case, just sit back, relax, finish the tutorial, and remember to click this button any time you make changes (yes! you can continue to change and update your workflows!)."
msgstr ""

#: ../chapter_1.rst:373
# 86df5560dcc7486cbdf9f73ea3d272b2
msgid "Could the time have arrived? Time to try it out? YES! Go to your ``Todo`` folder and add a new TODO Item. Validate that the workflow works as expected. By toggling between the states."
msgstr ""

#: ../chapter_1.rst:380
# c363f2b35326465d887367e32b3ce17f
msgid "Congrats! You have now passed `Plone Workflow 101`. Next we will transition from developing through the web (TTW) to developing on the filesystem."
msgstr ""

