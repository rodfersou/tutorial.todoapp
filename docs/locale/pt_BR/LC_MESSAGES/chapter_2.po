# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, Caipirinha Sprinters
# This file is distributed under the same license as the tutorial.todoapp package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tutorial.todoapp 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-06-06 13:36\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../chapter_2.rst:13
# e81f54aee8c54cf3813e92dee17e1ec2
msgid "Chapter 2: Filesystem package"
msgstr ""

#: ../chapter_2.rst:15
# 37c1fb05e2ad4d239ad4bde0afd4836c
msgid "Alright! In Chapter 1 you got your content-type and your workflow hooked up and running. You're now ready for the next step: pushing your changes to a filesystem-based package and into a version control system."
msgstr ""

#: ../chapter_2.rst:19
# c1a159ad822a457a81f13a368f6c9356
msgid "Now, why would you even want to do that? Here's a couple of reasons:"
msgstr ""

#: ../chapter_2.rst:22
# a281a5ac2ecd4f7288c88f7a1399a457
msgid "**Tracking of changes**"
msgstr ""

#: ../chapter_2.rst:24
# a5aec49429474e1f8876e9d555b4ef31
msgid "The most obvious one: when you store the configuration of your content-type and your workflow in a `VCS <http://en.wikipedia.org/wiki/Revision_control>`_, you can track how they changed over time. It useful to be able to look back a few months and see how your files changed."
msgstr ""

#: ../chapter_2.rst:29
# 804ba9e1b8034257857cb43488c8a185
msgid "**Distribution to other developers**"
msgstr ""

#: ../chapter_2.rst:31
# 642f1d4f279c4ca5836b2f21c053d714
msgid "If you are working in a team you have two ways of distributing your work: either write up a guide on what needs to be clicked for someone to come to the state you are currently at (slow, manual and error-prone) OR you export your configuration and the other developer simply imports it (fast, consistent)."
msgstr ""

#: ../chapter_2.rst:37
# e875d10956544840993ea154c4549562
msgid "**Tests**"
msgstr ""

#: ../chapter_2.rst:39
# b51be8af07534b7191b74b984ab1c75c
msgid "Last, but the most important one, having your configuration exported to a filesystem package allows you to write tests for it. When your test runner spins up a Plone site to run tests again, it needs to have the same content-type and workflow that you configured TTW. And importing configuration is by far the easiest way to give him that."
msgstr ""

#: ../chapter_2.rst:47
# 54e128e65e184f11a7aac07705accf70
msgid "Package skeleton"
msgstr ""

#: ../chapter_2.rst:49
# 171047e01ad648889ed924d1b60c9f65
msgid "Let's start by creating a package skeleton. Since writing things up from scratch kinda sucks, use this tutorial as your skeleton."
msgstr ""

#: ../chapter_2.rst:54
# b82084f7ff374ec4a66b36ee178e9bb5
msgid "Exporting configuration"
msgstr ""

#: ../chapter_2.rst:57
# 8c07b4cca93d4604955609142b0568db
msgid "Exporting Todo Item content-type"
msgstr ""

#: ../chapter_2.rst:59
# 096843592e364016887a000c28345e0c
msgid "Navigate back to the dexterity content type panel or go directly to ``http://localhost:8080/Plone/@@dexterity-types``"
msgstr ""

#: ../chapter_2.rst:62
# ab8de3b6fecc493d91bceee44124b217
msgid "Check the TODO item and then click on export type profile to download the type. If you don't check anything, it won't do anything and there is currently no error message so don't be surprised."
msgstr ""

#: ../chapter_2.rst:69
# d54ef57795e54e6aaaae5e5ff05f2e65
msgid "This will start a download to you machine. Navigate to that directory and unzip the contents of that directory. Here is an example of what this will look like:"
msgstr ""

#: ../chapter_2.rst:76
# 30ecfb153e1a41958c6869624dd065c1
msgid "We need to take types.xml and the types folder, and save it in our base product. You can use your finder or explorer to drag and drop, or use the command line. I'll use command line as an example but feel free to improvise. You want to move the files into your default product profile. What's a profile? Don't worry about it. Sit back, relax, and finish the tutorial. You will move the files into"
msgstr ""

#: ../chapter_2.rst:87
# dc828fb9e52d44c9a6740103ac37ff43
msgid "Anytime you perform some sort of configuration export from Plone to a custom product, you will put the XML files in the profiles/default folder. Every time you make changes to your types, you should re-export and save into the same location. Now, when the next person installs the add-on, they wil have the type already there!"
msgstr ""

#: ../chapter_2.rst:94
# 5da3718664d14f19a70a1fe2bcdb71f6
msgid "Dependencies"
msgstr ""

#: ../chapter_2.rst:96
# 7c3ce1d0af274453997407f1687b892e
msgid "Before we continue we need to tell Plone that whenever we install `tutorial.todoapp` we want it to also pull in the Dexterity package, so our content type is working happily. We do that by adding the following lines to ``profiles/default/metadata.xml``, inside the ``<metadata>`` tag."
msgstr ""

#: ../chapter_2.rst:109
# 8f521060483147318e73ae3a7be2842c
msgid "Exporting todo_item_workflow"
msgstr ""

#: ../chapter_2.rst:111
# 63fca9a6279346cfa5ef857ea486aa58
msgid "Exporting a workflow is very similar to exporting a Dexterity type. It just takes a little bit more navigating and a trip to the ZMI. To export the workflow, navigate to the root of the ZMI by gong to ``http://localhost:8080/Plone/manage_main``. From there, head into the `portal_setup` tool:"
msgstr ""

#: ../chapter_2.rst:120
# b5089ca9a008413cabcb935689b3bff1
msgid "WARNING: The following User Interface is not recommended for children under 18."
msgstr ""

#: ../chapter_2.rst:122
# 7ea8fa413aa442a7b03369ed38419943
msgid "In the `portal_setup` tool, click on the export tab."
msgstr ""

#: ../chapter_2.rst:127
# b064373c92f145b9bfe62e3203c342a3
msgid "There are a LOT of things that you can export here, but that is for a different tutorial. For now, find export item #28 called ``Workflow Tool``, check the box to the left. Then scroll all the way to the bottom and ``Export selected steps``."
msgstr ""

#: ../chapter_2.rst:135
# b44a72d859ea4a58a7094d638b39742a
msgid "Just like the Dexterity content type, you will want to untar the downloaded folder, and move into your default profile folder."
msgstr ""

#: ../chapter_2.rst:138
# d482f7f7cf8442e68f4fc7a4503df816
msgid "In that download you should have a file called ``workflows.xml`` and a folder called ``workflows`` like below. You will move both of them to the default profile."
msgstr ""

#: ../chapter_2.rst:145
# 6b643fb72c2548a39aa205dcc6b2a91c
msgid "Place all of these files in your profile at"
msgstr ""

#: ../chapter_2.rst:151
# 46bd9ff2be4b47f085660b2466dc7e1d
msgid "And you are done! Congratulations on the birth of your new product!"
msgstr ""

#: ../chapter_2.rst:155
# 1c09b402d1fd4b2fb173dbb988bad5d3
msgid "Tests"
msgstr ""

#: ../chapter_2.rst:157
# 0788ccf6485d4e52a075aa58be3d7f7b
msgid "Alright, tests! Considered a pain and a nuisance by some but loved by all who do it. If you want your code to be solid and your site to be stable, tests are a great way to get there."
msgstr ""

#: ../chapter_2.rst:161
# 6aa14b2f38e147c6b5fdb1c3f71befab
msgid "The package you have on your filesystem is already configured to give you a test-runner so you can immediately go and run it -- obviously you have no tests, but at least you try if your test runner works."
msgstr ""

#: ../chapter_2.rst:170
# 3847bdf347c945da9baa7b25dfbd2f5f
msgid "Note: you do *NOT* need to stop your Plone instance in order to run tests. They will peacefully co-exist."
msgstr ""

#: ../chapter_2.rst:173
# 56a0a57590334eccbaea031e81dd769f
msgid "Good, the next thing to do is to add tests. Go to `tutorial.todoapp repo on GitHub <https://github.com/collective/tutorial.todoapp/>`_ and copy/paste (or download) all files from the ``src/tutorial/todoapp/tests`` folder to your local ``src/tutorial/todoapp/tests`` folder. You can also get the tests with git:"
msgstr ""

#: ../chapter_2.rst:184
# 24b5b4a67c3b4cca8131c68c6260d279
msgid "In this folder there will be many new files:"
msgstr ""

#: ../chapter_2.rst:186
# df6eb75e76f84a33a45c584881520a7c
msgid "**base.py**"
msgstr ""

#: ../chapter_2.rst:188
# b8c3c0e0dfb04a4e8d70c4a28c9823e6
msgid "This module contains code that bootstraps your test environment: start up Zope, add a Plone site, install your package, etc. Code in here is mostly boilerplate so for now just use it and mind what exactly it does underneath."
msgstr ""

#: ../chapter_2.rst:192
# 87c0f871f64d40bbb137cfcd6e0d571b
msgid "**test_setup.py**"
msgstr ""

#: ../chapter_2.rst:194
# 344fd7e5daa9481d9c20c80acee2e906
msgid "This module contains tests that check if your package was successfully installed and configured. Tests in here are concerned with XML files you have in the ``profiles/default`` folder."
msgstr ""

#: ../chapter_2.rst:198
# 0d2e1828479543208fd4b63743e1dbda
msgid "**test_todo_item.py**"
msgstr ""

#: ../chapter_2.rst:200
# f534285d8ccf4fe3a0cf25c711bd5fe9
msgid "And finally a module that contains tests for your custom content-type."
msgstr ""

#: ../chapter_2.rst:202
# 83f3c31a1d0442d18e1ce08b8322b184
msgid "We will not go into details of what each test does as we believe the test code and its comments are in themselves informative and we will rather encourage you to go through all tests, try to understand what they do, maybe change something and see what happens, etc."
msgstr ""

#: ../chapter_2.rst:207
# b90e28158d6849b59b5271689d3d58c2
msgid "Remember that you run tests with ``bin/test`` and you should get an output that looks somewhat like this:"
msgstr ""

#: ../chapter_2.rst:227
# 5fe18c9518c54ed4889a7206ad9b69c4
msgid "Troubleshooting"
msgstr ""

#: ../chapter_2.rst:229
# ab93e06bddd943029b0bc9cd3840fe55
msgid "If something goes wrong you can always go to GitHub and see how the `code for chapter 2 <https://github.com/collective/tutorial.todoapp/tree/chapter2>`_ should look like and compare this to what you have on your local machine."
msgstr ""

